//////////////////1

00	1007	READ 07	Ввести число и сохранить в ячейке 07
01	1008	READ 08	Ввести число и сохранить в ячейке 08
02	2007	LOAD 07	Загрузить число из 07 в аккумулятор
03	3008	ADD 08	Прибавить число из 08 к аккумулятору
04	2109	STORE 09	Сохранить результат в ячейке 09
05	1109	WRITE 09	Вывести результат (из 09)
06	4300	HALT	Остановить программу
07	0	…	Тут будет первое введенное число
08	0	…	Тут будет второе введенное число
09	0	…	Тут сохранится сумма


//////////////////2


00	1019	READ 19	Ввести число и сохранить в ячейке 19
01	2019	LOAD 19	Загрузить число из 19 в аккумулятор
02	4107	BRANCHNEG 07	Перейти на 07, если аккумулятор < 0
03	3016	ADD 16	Прибавить число из 16 к аккумулятору
04	2116	STORE 16	Сохранить результат в 16
05	4000	BRANCH 00	Безусловный переход в начало (00)
06	2016	LOAD 16	Загрузить число из 16
07	1116	WRITE 16	Вывести значение из 16
08	4300	HALT	Остановить программу
09–15	0000	…	Пустые ячейки (возможны переменные)
16	0000	Переменная (накопитель суммы)	
19	0000	Переменная для ввода числа	


//////////////////3


00	2016	LOAD 16	Загрузить делимое (число в 16) в аккумулятор
01	3117	SUBTRACT 17	Вычесть 17 (проверка на ноль)
02	4211	BRANCHZERO 11	Если результат 0, перейти на 11 (ошибка деления на 0)
03	1019	READ 19	Ввести делимое и сохранить в 19
04	2021	LOAD 21	Загрузить 21 (числитель)
05	3019	ADD 19	Прибавить введенное число
06	2121	STORE 21	Сохранить результат в 21
07	2016	LOAD 16	Загрузить делимое
08	3020	ADD 20	Прибавить 20
09	2116	STORE 16	Сохранить обновленное значение
10	4000	BRANCH 00	Вернуться в начало
11	2021	LOAD 21	Загрузить делимое
12	3217	DIVIDE 17	Разделить на 17 (делитель)
13	2118	STORE 18	Сохранить результат в 18
14	1118	WRITE 18	Вывести результат
15	4300	HALT	Остановить программу
16	0000	16	Делимое (число)
17	0007	17	Делитель (по умолчанию 7)
18	0000	18	Результат деления
19	0000	19	Переменная для ввода
20	0001	20	Константа 1
21	0000	21	Вспомогательная переменная
как вывести как цикл на машинном коде, условно есть число N = 5, нужно сделать так чтобы оно циклом выводило 1 2 3 4 5, взависимости от размера числа 

//////////////////4


00	1024	READ 24	Ввести основание (число, которое возводим в степень)
01	2024	LOAD 24	Загрузить основание в аккумулятор
02	4222	BRANCHZERO 22	Если основание 0, перейти на 22 (вывод 0)
03	4122	BRANCHNEG 22	Если основание отрицательное, тоже перейти на 22
04	1025	READ 25	Ввести показатель степени (сколько раз умножать)
05	2024	LOAD 24	Загрузить основание
06	3126	MULTIPLY 26	Умножить на 1 (инициализация результата)
07	2124	STORE 24	Сохранить промежуточный результат в 24
08	2025	LOAD 25	Загрузить показатель степени
09	2127	STORE 27	Сохранить показатель степени в 27
10	2024	LOAD 24	Загрузить текущее значение результата
11	4222	BRANCHZERO 22	Если 0, перейти к выводу
12	1025	READ 25	Ввести показатель степени снова
13	2024	LOAD 24	Загрузить основание
14	3126	MULTIPLY 26	Умножить на 1 (поддержка результата)
15	2124	STORE 24	Сохранить промежуточный результат
16	2025	LOAD 25	Загрузить показатель степени
17	3127	SUBTRACT 27	Вычесть 1 из счетчика степени
18	4110	BRANCHNEG 10	Если степень закончилась, выйти из цикла
19	2025	LOAD 25	Загрузить степень
20	2127	STORE 27	Сохранить обновленное значение степени
21	4010	BRANCH 10	Повторить цикл умножения
22	1127	WRITE 27	Вывести итоговый результат
23	4300	HALT	Остановить программу
24	0000	24	Переменная для основания
25	0000	25	Переменная для степени
26	0001	26	Константа 1 (для инициализации результата)
27	0000	27	Переменная для результата


READ A
READ B
LOAD A
ADD B
STORE C
WRITE C
MULTIPLY C
HALT
A
B
C

